/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/


process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]


    withName: FASTQC {
        ext.args = '--quiet'
    }



    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }


    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:BOWTIE2_ALIGN' {
        publishDir = [
            path: { "${params.outdir}/02_genome/index" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }

    withName: '.*:BOWTIE2_BUILD' {
        publishDir = [
            path: { "${params.outdir}/00_genome/index" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_reference
        ]
    }


    withName: '.*:SAMTOOLS_FAIDX' {
        publishDir = [
            path: { "${params.outdir}/00_genome/index" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: false
        ]
    }

    withName: '.*:SAMTOOLS_[A-Z]+' {            
        ext.prefix = { "${meta.id}-sorted" }
        publishDir = [
            path: { "${params.outdir}/02_alignment/${meta.id}/" },
            mode: "${params.publish_dir_mode}",
            pattern: "*.{bam,flagstat,idxstats,stats}",
            enabled: true
        ]
    }

    withName: '.*:BCFTOOLS_MPILEUP' { 
        ext.args2 = { "--ploidy 1" }
        publishDir = [
            path: { "${params.outdir}/03_vcf/" },
            mode: "${params.publish_dir_mode}",
            pattern: "*.{vcf,txt,mpileup.gz,txt}",
            enabled: true
        ]


    }

    /*withName: '.*:SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/02_alignment/" },
            mode: "${params.publish_dir_mode}",
            pattern: "*.bai",
            enabled: true
        ]
    }
*/

/*
    withName: '.*:SAMTOOLS_{FLAGSTAT,IDXSTATS}' {
        publishDir = [
            path: { "${params.outdir}/02_alignment/samtools/${meta.id}/" },
                mode: "${params.publish_dir_mode}",
                pattern: "*{flagstat,idxstats,stats}",
                enabled: true
        ]
    } */
}

 


if(!params.skip_fastqc) {
    process {
        withName: '.*:FASTQC_TRIMGALORE:FASTQC' {
            ext.args   = '--quiet'
            publishDir = [
                path: { "${params.outdir}/01_prealign/pretrim_fastqc" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            ]
        }
    }
    process {
        withName: '.*:FASTQC_TRIMGALORE:TRIMGALORE' {
        publishDir = [
            path: { "${params.outdir}/01_prealign/trimgalore" },
                mode: "${params.publish_dir_mode}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            ]
        }
    }
}
